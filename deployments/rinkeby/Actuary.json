{
  "address": "0x1ed1d4d6B6898DF8531CfA68094a7DeD9338d76e",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_claimAssessor",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "cohort",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "CohortCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        }
      ],
      "name": "addCohortCreator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimAssessor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cohortCreateFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "cohortCreators",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cohortCreatorsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_cohortFactory",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_cohortStartCapital",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_premiumFactory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_premiumCurrency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minPremium",
          "type": "uint256"
        }
      ],
      "name": "createCohort",
      "outputs": [
        {
          "internalType": "address",
          "name": "cohort",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        }
      ],
      "name": "isCohortCreator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setCohortCreationFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "withdrawCreateFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x62194a2e91966bb05a31a07170e658af3f4278db89cbe70d7c6d2b572eb9baac",
  "receipt": {
    "to": null,
    "from": "0x6C641CE6A7216F12d28692f9d8b2BDcdE812eD2b",
    "contractAddress": "0x1ed1d4d6B6898DF8531CfA68094a7DeD9338d76e",
    "transactionIndex": 5,
    "gasUsed": "753690",
    "logsBloom": "0x
    "blockHash": "0xdaae47fc6a11100e62fee88783baabf29ee7269f6916f1fcd42b5e62a0fae28f",
    "transactionHash": "0x62194a2e91966bb05a31a07170e658af3f4278db89cbe70d7c6d2b572eb9baac",
    "logs": [
      {
        "transactionIndex": 5,
        "blockNumber": 9164645,
        "transactionHash": "0x62194a2e91966bb05a31a07170e658af3f4278db89cbe70d7c6d2b572eb9baac",
        "address": "0x1ed1d4d6B6898DF8531CfA68094a7DeD9338d76e",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000006c641ce6a7216f12d28692f9d8b2bdcde812ed2b"
        ],
        "data": "0x",
        "logIndex": 4,
        "blockHash": "0xdaae47fc6a11100e62fee88783baabf29ee7269f6916f1fcd42b5e62a0fae28f"
      }
    ],
    "blockNumber": 9164645,
    "cumulativeGasUsed": "1504045",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD459cb68E3d6c4dEB932C706Fa74D98a5d3578A3"
  ],
  "solcInputHash": "5cabb2a55b314b9284c553a699dd7a5d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimAssessor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"cohort\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"CohortCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"addCohortCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimAssessor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cohortCreateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"cohortCreators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cohortCreatorsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cohortFactory\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_cohortStartCapital\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_premiumFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_premiumCurrency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minPremium\",\"type\":\"uint256\"}],\"name\":\"createCohort\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"cohort\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"isCohortCreator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setCohortCreationFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdrawCreateFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setCohortCreationFee(uint256)\":{\"details\":\"when setting fee, please consider ETH decimal(8)\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Actuary.sol\":\"Actuary\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"contracts/Actuary.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./libraries/TransferHelper.sol\\\";\\nimport \\\"./interfaces/ICohortFactory.sol\\\";\\n\\ncontract Actuary is Ownable {\\n    address public claimAssessor;\\n    address[] public cohortCreators;\\n    uint256 public cohortCreateFee;\\n\\n    event CohortCreated(address indexed cohort, address indexed owner);\\n\\n    constructor(address _claimAssessor) {\\n        claimAssessor = _claimAssessor;\\n    }\\n\\n    modifier onlyCohortCreator() {\\n        require(isCohortCreator(msg.sender), \\\"UnoRe: Forbidden\\\");\\n        _;\\n    }\\n\\n    function cohortCreatorsLength() public view returns (uint256) {\\n        return cohortCreators.length;\\n    }\\n\\n    function addCohortCreator(address _creator) external onlyOwner {\\n        require(isCohortCreator(_creator) == false, \\\"UnoRe: Already registered\\\");\\n        cohortCreators.push(_creator);\\n    }\\n\\n    function createCohort(\\n        address _cohortFactory,\\n        string memory _name,\\n        uint256 _cohortStartCapital,\\n        address _premiumFactory,\\n        address _premiumCurrency,\\n        uint256 _minPremium\\n    ) external payable onlyCohortCreator returns (address cohort) {\\n        require(owner() == msg.sender || msg.value == cohortCreateFee, \\\"UnoRe: Incorrect creation fee\\\");\\n        cohort = ICohortFactory(_cohortFactory).newCohort(\\n            msg.sender,\\n            _name,\\n            claimAssessor,\\n            _cohortStartCapital,\\n            _premiumFactory,\\n            _premiumCurrency,\\n            _minPremium\\n        );\\n\\n        emit CohortCreated(cohort, msg.sender);\\n    }\\n\\n    function isCohortCreator(address _creator) public view returns (bool) {\\n        if (owner() == _creator) {\\n            return true;\\n        }\\n        uint256 len = cohortCreators.length;\\n        for (uint256 ii = 0; ii < len; ii++) {\\n            if (cohortCreators[ii] == _creator) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    /**\\n     * @dev when setting fee, please consider ETH decimal(8)\\n     */\\n    function setCohortCreationFee(uint256 _fee) external onlyOwner {\\n        cohortCreateFee = _fee;\\n    }\\n\\n    function withdrawCreateFee(address _to) external onlyOwner {\\n        TransferHelper.safeTransferETH(_to, address(this).balance);\\n    }\\n}\\n\",\"keccak256\":\"0x364cc67a3edfcf65a7c3d1fdcf653239f3adb18e5cca696c57966833420fa1ed\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/ICohortFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\ninterface ICohortFactory {\\n    function newCohort(\\n        address _owner,\\n        string memory _name,\\n        address _claimAssessor,\\n        uint256 _cohortStartCapital,\\n        address _premiumFactory,\\n        address _premiumCurrency,\\n        uint256 _minPremium\\n    ) external returns (address);\\n}\\n\",\"keccak256\":\"0xcdb51932d725209a9cf85aae2218fef0de61dbe26c0184afafb2175c7e8acca7\",\"license\":\"GPL-3.0\"},\"contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.8.0;\\n\\n// from Uniswap TransferHelper library\\nlibrary TransferHelper {\\n    function safeApprove(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::safeApprove: approve failed\\\");\\n    }\\n\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::safeTransfer: transfer failed\\\");\\n    }\\n\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::transferFrom: transferFrom failed\\\");\\n    }\\n\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, \\\"TransferHelper::safeTransferETH: ETH transfer failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xb7650ccd26cfa42968350d9c477f55f98059d74e0f173a1da45b06c2607e705d\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610cb1380380610cb183398101604081905261002f916100ac565b60006100396100a8565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180546001600160a01b0319166001600160a01b03929092169190911790556100da565b3390565b6000602082840312156100bd578081fd5b81516001600160a01b03811681146100d3578182fd5b9392505050565b610bc8806100e96000396000f3fe6080604052600436106100c75760003560e01c80639fba341f11610074578063f17a87081161004e578063f17a8708146101e5578063f2fde38b146101fa578063f43dfbb71461021a576100c7565b80639fba341f1461019d578063ba69971f146101bd578063c6e89915146101d0576100c7565b80637565cac0116100a55780637565cac014610139578063779324ca146101665780638da5cb5b14610188576100c7565b806310b8f7a1146100cc5780636545cb14146100ee578063715018a614610124575b600080fd5b3480156100d857600080fd5b506100ec6100e73660046108cb565b61023a565b005b3480156100fa57600080fd5b5061010e6101093660046108cb565b610287565b60405161011b91906108ff565b60405180910390f35b34801561013057600080fd5b506100ec6102b1565b34801561014557600080fd5b506101596101543660046107a4565b61033a565b60405161011b919061097f565b34801561017257600080fd5b5061017b6103e2565b60405161011b9190610b07565b34801561019457600080fd5b5061010e6103e8565b3480156101a957600080fd5b506100ec6101b83660046107a4565b6103f7565b61010e6101cb3660046107e3565b6104ae565b3480156101dc57600080fd5b5061010e6105e2565b3480156101f157600080fd5b5061017b6105f1565b34801561020657600080fd5b506100ec6102153660046107a4565b6105f7565b34801561022657600080fd5b506100ec6102353660046107a4565b6106b7565b610242610703565b6001600160a01b03166102536103e8565b6001600160a01b0316146102825760405162461bcd60e51b815260040161027990610a64565b60405180910390fd5b600355565b6002818154811061029757600080fd5b6000918252602090912001546001600160a01b0316905081565b6102b9610703565b6001600160a01b03166102ca6103e8565b6001600160a01b0316146102f05760405162461bcd60e51b815260040161027990610a64565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000816001600160a01b031661034e6103e8565b6001600160a01b03161415610365575060016103dd565b60025460005b818110156103d657836001600160a01b03166002828154811061039e57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031614156103c4576001925050506103dd565b806103ce81610b40565b91505061036b565b5060009150505b919050565b60035481565b6000546001600160a01b031690565b6103ff610703565b6001600160a01b03166104106103e8565b6001600160a01b0316146104365760405162461bcd60e51b815260040161027990610a64565b61043f8161033a565b1561045c5760405162461bcd60e51b81526004016102799061098a565b600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0392909216919091179055565b60006104b93361033a565b6104d55760405162461bcd60e51b815260040161027990610ad0565b336104de6103e8565b6001600160a01b031614806104f4575060035434145b6105105760405162461bcd60e51b815260040161027990610a99565b600154604051632e8ccbe960e21b81526001600160a01b03808a169263ba332fa49261054d9233928c929116908b908b908b908b90600401610913565b602060405180830381600087803b15801561056757600080fd5b505af115801561057b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059f91906107c7565b60405190915033906001600160a01b038316907fa1f0bb63ca643e76f1e145f8aa769d29d169b2964c8b1e3b0f9807b334ed0cfb90600090a39695505050505050565b6001546001600160a01b031681565b60025490565b6105ff610703565b6001600160a01b03166106106103e8565b6001600160a01b0316146106365760405162461bcd60e51b815260040161027990610a64565b6001600160a01b03811661065c5760405162461bcd60e51b8152600401610279906109c1565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6106bf610703565b6001600160a01b03166106d06103e8565b6001600160a01b0316146106f65760405162461bcd60e51b815260040161027990610a64565b6107008147610707565b50565b3390565b604080516000808252602082019092526001600160a01b03841690839060405161073191906108e3565b60006040518083038185875af1925050503d806000811461076e576040519150601f19603f3d011682016040523d82523d6000602084013e610773565b606091505b50509050806107945760405162461bcd60e51b815260040161027990610a07565b505050565b80356103dd81610b7d565b6000602082840312156107b5578081fd5b81356107c081610b7d565b9392505050565b6000602082840312156107d8578081fd5b81516107c081610b7d565b60008060008060008060c087890312156107fb578182fd5b863561080681610b7d565b955060208781013567ffffffffffffffff80821115610823578485fd5b818a0191508a601f830112610836578485fd5b81358181111561084857610848610b67565b604051601f8201601f191681018501838111828210171561086b5761086b610b67565b60405281815283820185018d1015610881578687fd5b81858501868301379081019093018590525090955050604087013593506108aa60608801610799565b92506108b860808801610799565b915060a087013590509295509295509295565b6000602082840312156108dc578081fd5b5035919050565b600082516108f5818460208701610b10565b9190910192915050565b6001600160a01b0391909116815260200190565b60006001600160a01b03808a16835260e0602084015288518060e08501526101006109448282870160208e01610b10565b988216604085015260608401979097529485166080830152509190921660a082015260c0810191909152601f909101601f1916010192915050565b901515815260200190565b60208082526019908201527f556e6f52653a20416c7265616479207265676973746572656400000000000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526034908201527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60408201527f20455448207472616e73666572206661696c6564000000000000000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f556e6f52653a20496e636f7272656374206372656174696f6e20666565000000604082015260600190565b60208082526010908201527f556e6f52653a20466f7262696464656e00000000000000000000000000000000604082015260600190565b90815260200190565b60005b83811015610b2b578181015183820152602001610b13565b83811115610b3a576000848401525b50505050565b6000600019821415610b6057634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461070057600080fdfea264697066735822122083dadf003d34b95c2067f896afeffaf400c11b3910c8bed2501dcb20f79af87964736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106100c75760003560e01c80639fba341f11610074578063f17a87081161004e578063f17a8708146101e5578063f2fde38b146101fa578063f43dfbb71461021a576100c7565b80639fba341f1461019d578063ba69971f146101bd578063c6e89915146101d0576100c7565b80637565cac0116100a55780637565cac014610139578063779324ca146101665780638da5cb5b14610188576100c7565b806310b8f7a1146100cc5780636545cb14146100ee578063715018a614610124575b600080fd5b3480156100d857600080fd5b506100ec6100e73660046108cb565b61023a565b005b3480156100fa57600080fd5b5061010e6101093660046108cb565b610287565b60405161011b91906108ff565b60405180910390f35b34801561013057600080fd5b506100ec6102b1565b34801561014557600080fd5b506101596101543660046107a4565b61033a565b60405161011b919061097f565b34801561017257600080fd5b5061017b6103e2565b60405161011b9190610b07565b34801561019457600080fd5b5061010e6103e8565b3480156101a957600080fd5b506100ec6101b83660046107a4565b6103f7565b61010e6101cb3660046107e3565b6104ae565b3480156101dc57600080fd5b5061010e6105e2565b3480156101f157600080fd5b5061017b6105f1565b34801561020657600080fd5b506100ec6102153660046107a4565b6105f7565b34801561022657600080fd5b506100ec6102353660046107a4565b6106b7565b610242610703565b6001600160a01b03166102536103e8565b6001600160a01b0316146102825760405162461bcd60e51b815260040161027990610a64565b60405180910390fd5b600355565b6002818154811061029757600080fd5b6000918252602090912001546001600160a01b0316905081565b6102b9610703565b6001600160a01b03166102ca6103e8565b6001600160a01b0316146102f05760405162461bcd60e51b815260040161027990610a64565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000816001600160a01b031661034e6103e8565b6001600160a01b03161415610365575060016103dd565b60025460005b818110156103d657836001600160a01b03166002828154811061039e57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031614156103c4576001925050506103dd565b806103ce81610b40565b91505061036b565b5060009150505b919050565b60035481565b6000546001600160a01b031690565b6103ff610703565b6001600160a01b03166104106103e8565b6001600160a01b0316146104365760405162461bcd60e51b815260040161027990610a64565b61043f8161033a565b1561045c5760405162461bcd60e51b81526004016102799061098a565b600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0392909216919091179055565b60006104b93361033a565b6104d55760405162461bcd60e51b815260040161027990610ad0565b336104de6103e8565b6001600160a01b031614806104f4575060035434145b6105105760405162461bcd60e51b815260040161027990610a99565b600154604051632e8ccbe960e21b81526001600160a01b03808a169263ba332fa49261054d9233928c929116908b908b908b908b90600401610913565b602060405180830381600087803b15801561056757600080fd5b505af115801561057b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059f91906107c7565b60405190915033906001600160a01b038316907fa1f0bb63ca643e76f1e145f8aa769d29d169b2964c8b1e3b0f9807b334ed0cfb90600090a39695505050505050565b6001546001600160a01b031681565b60025490565b6105ff610703565b6001600160a01b03166106106103e8565b6001600160a01b0316146106365760405162461bcd60e51b815260040161027990610a64565b6001600160a01b03811661065c5760405162461bcd60e51b8152600401610279906109c1565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6106bf610703565b6001600160a01b03166106d06103e8565b6001600160a01b0316146106f65760405162461bcd60e51b815260040161027990610a64565b6107008147610707565b50565b3390565b604080516000808252602082019092526001600160a01b03841690839060405161073191906108e3565b60006040518083038185875af1925050503d806000811461076e576040519150601f19603f3d011682016040523d82523d6000602084013e610773565b606091505b50509050806107945760405162461bcd60e51b815260040161027990610a07565b505050565b80356103dd81610b7d565b6000602082840312156107b5578081fd5b81356107c081610b7d565b9392505050565b6000602082840312156107d8578081fd5b81516107c081610b7d565b60008060008060008060c087890312156107fb578182fd5b863561080681610b7d565b955060208781013567ffffffffffffffff80821115610823578485fd5b818a0191508a601f830112610836578485fd5b81358181111561084857610848610b67565b604051601f8201601f191681018501838111828210171561086b5761086b610b67565b60405281815283820185018d1015610881578687fd5b81858501868301379081019093018590525090955050604087013593506108aa60608801610799565b92506108b860808801610799565b915060a087013590509295509295509295565b6000602082840312156108dc578081fd5b5035919050565b600082516108f5818460208701610b10565b9190910192915050565b6001600160a01b0391909116815260200190565b60006001600160a01b03808a16835260e0602084015288518060e08501526101006109448282870160208e01610b10565b988216604085015260608401979097529485166080830152509190921660a082015260c0810191909152601f909101601f1916010192915050565b901515815260200190565b60208082526019908201527f556e6f52653a20416c7265616479207265676973746572656400000000000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526034908201527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60408201527f20455448207472616e73666572206661696c6564000000000000000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f556e6f52653a20496e636f7272656374206372656174696f6e20666565000000604082015260600190565b60208082526010908201527f556e6f52653a20466f7262696464656e00000000000000000000000000000000604082015260600190565b90815260200190565b60005b83811015610b2b578181015183820152602001610b13565b83811115610b3a576000848401525b50505050565b6000600019821415610b6057634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461070057600080fdfea264697066735822122083dadf003d34b95c2067f896afeffaf400c11b3910c8bed2501dcb20f79af87964736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setCohortCreationFee(uint256)": {
        "details": "when setting fee, please consider ETH decimal(8)"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Actuary.sol:Actuary",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 751,
        "contract": "contracts/Actuary.sol:Actuary",
        "label": "claimAssessor",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 754,
        "contract": "contracts/Actuary.sol:Actuary",
        "label": "cohortCreators",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 756,
        "contract": "contracts/Actuary.sol:Actuary",
        "label": "cohortCreateFee",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}