{
  "address": "0x26f51b1EA2eAB0B9e81Ec473Fb65320a86cF15A1",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minimum",
          "type": "uint256"
        }
      ],
      "name": "newPremiumPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x7c53753fcd1116837458917e2f280418c2c99721c6e04346c26a470a8ed81026",
  "receipt": {
    "to": null,
    "from": "0xD69C2Ac9b708217bCDfD932e4d24e024E1eE5D8E",
    "contractAddress": "0x26f51b1EA2eAB0B9e81Ec473Fb65320a86cF15A1",
    "transactionIndex": 103,
    "gasUsed": "590502",
    "logsBloom": "0x
    "blockHash": "0x542edb8a898c18da36940f61cb248baafb904b23d8e7da20c225caf29af0601a",
    "transactionHash": "0x7c53753fcd1116837458917e2f280418c2c99721c6e04346c26a470a8ed81026",
    "logs": [],
    "blockNumber": 11072960,
    "cumulativeGasUsed": "18178004",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "604ea37c2335432500405b2ce59f3005",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minimum\",\"type\":\"uint256\"}],\"name\":\"newPremiumPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/factories/PremiumPoolFactory.sol\":\"PremiumPoolFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"contracts/PremiumPool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.0;\\n\\nimport \\\"./libraries/TransferHelper.sol\\\";\\nimport \\\"./interfaces/IPremiumPool.sol\\\";\\n\\ncontract PremiumPool is IPremiumPool {\\n    address private cohort;\\n\\n    mapping(uint16 => uint256) private _balances; // protocol => premium\\n    mapping(uint16 => uint256) private _premiumReward; // protocol => total premium reward\\n\\n    uint256 private _minimumPremium;\\n    address public override currency;\\n\\n    event PremiumDeposited(uint16 indexed protocolIdx, uint256 amount);\\n    event TransferAsset(address indexed _to, uint256 _amount);\\n\\n    constructor(\\n        address _cohort,\\n        address _currency,\\n        uint256 _minimum\\n    ) {\\n        cohort = _cohort;\\n        currency = _currency;\\n        _minimumPremium = _minimum;\\n    }\\n\\n    modifier onlyCohort() {\\n        require(msg.sender == cohort, \\\"UnoRe: Not cohort\\\");\\n        _;\\n    }\\n\\n    function balanceOf(uint16 _protocolIdx) external view override returns (uint256) {\\n        return _balances[_protocolIdx];\\n    }\\n\\n    /**\\n     * @dev This function gives the total premium reward after coverage\\n     */\\n    function premiumRewardOf(uint16 _protocolIdx) external view override returns (uint256) {\\n        return _premiumReward[_protocolIdx] == 0 ? _balances[_protocolIdx] : _premiumReward[_protocolIdx];\\n    }\\n\\n    function minimumPremium() external view override returns (uint256) {\\n        return _minimumPremium;\\n    }\\n\\n    /**\\n     * @dev Once premiumReward is set, it is fixed value, not changed according to balance\\n     */\\n    function setPremiumReward(uint16 _protocolIdx) external override onlyCohort {\\n        if(_premiumReward[_protocolIdx] == 0) {\\n            _premiumReward[_protocolIdx] = _balances[_protocolIdx];\\n        }\\n    }\\n\\n    /**\\n     * It is a bit confusing thing, there's only balance increase without transfer.\\n     * But it is Okay, because this PremiumPool and depositPremium function is fully controlled\\n     * by Cohort and depositPremium function in Cohort smart contract.\\n     */\\n    function depositPremium(uint16 _protocolIdx, uint256 _amount) external override onlyCohort {\\n        _balances[_protocolIdx] += _amount;\\n        emit PremiumDeposited(_protocolIdx, _amount);\\n    }\\n\\n    function withdrawPremium(\\n        address _to,\\n        uint16 _protocolIdx,\\n        uint256 _amount\\n    ) external override onlyCohort {\\n        require(_balances[_protocolIdx] >= _amount, \\\"UnoRe: Insufficient Premium\\\");\\n        _balances[_protocolIdx] -= _amount;\\n        TransferHelper.safeTransfer(currency, _to, _amount);\\n    }\\n\\n    function transferAsset(\\n        uint16 _protocolIdx,\\n        address _to,\\n        uint256 _amount\\n    ) external override onlyCohort {\\n        _balances[_protocolIdx] -= _amount;\\n        TransferHelper.safeTransfer(currency, _to, _amount);\\n        emit TransferAsset(_to, _amount);\\n    }\\n}\\n\",\"keccak256\":\"0xa574cfbbd1219c869bff098498e688860719a245f439bfb0ca7589d784ee64c1\",\"license\":\"GPL-3.0\"},\"contracts/factories/PremiumPoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\nimport \\\"../PremiumPool.sol\\\";\\nimport \\\"../interfaces/IPremiumPoolFactory.sol\\\";\\n\\ncontract PremiumPoolFactory is IPremiumPoolFactory {\\n    constructor() {}\\n\\n    function newPremiumPool(address _currency, uint256 _minimum) external override returns (address) {\\n        PremiumPool _premiumPool = new PremiumPool(msg.sender, _currency, _minimum);\\n        address _premiumPoolAddr = address(_premiumPool);\\n\\n        return _premiumPoolAddr;\\n    }\\n}\\n\",\"keccak256\":\"0x3bfb2e06a3ee04ffbf45cb0dd5457b902eea111062b39c58d50da04366ed239d\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IPremiumPool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\ninterface IPremiumPool {\\n    function depositPremium(uint16 _protocolIdx, uint256 _amount) external;\\n\\n    function withdrawPremium(\\n        address _to,\\n        uint16 _protocolIdx,\\n        uint256 _amount\\n    ) external;\\n\\n    function transferAsset(\\n        uint16 _protocolIdx,\\n        address _to,\\n        uint256 _amount\\n    ) external;\\n\\n    function minimumPremium() external returns (uint256);\\n\\n    function balanceOf(uint16 _protocolIdx) external view returns (uint256);\\n\\n    function premiumRewardOf(uint16 _protocolIdx) external view returns (uint256);\\n\\n    function currency() external view returns (address);\\n\\n    function setPremiumReward(uint16 _protocolIdx) external;\\n}\\n\",\"keccak256\":\"0x01505516fb14bf611fbd12d17947c514e1e230daf003f137c274e8e9e9e43de6\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IPremiumPoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.0;\\n\\ninterface IPremiumPoolFactory {\\n    function newPremiumPool(address _currency, uint256 _minimum) external returns (address);\\n}\\n\",\"keccak256\":\"0x83066636bc349858740476b3e146f3a4a6584333bbb9363f1805cb7ec9946bec\",\"license\":\"GPL-3.0\"},\"contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.8.0;\\n\\n// from Uniswap TransferHelper library\\nlibrary TransferHelper {\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::safeTransfer: transfer failed\\\");\\n    }\\n\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::transferFrom: transferFrom failed\\\");\\n    }\\n\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, \\\"TransferHelper::safeTransferETH: ETH transfer failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x12d85c742c461bc19d89b9807607c2f674cfc30c4baf00268605f050f19f4887\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506109bb806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063b001e09a14610030575b600080fd5b61004361003e3660046100a9565b610059565b60405161005091906100df565b60405180910390f35b60008033848460405161006b9061009c565b610077939291906100f3565b604051809103906000f080158015610093573d6000803e3d6000fd5b50949350505050565b61086e8061011883390190565b600080604083850312156100bb578182fd5b82356001600160a01b03811681146100d1578283fd5b946020939093013593505050565b6001600160a01b0391909116815260200190565b6001600160a01b03938416815291909216602082015260408101919091526060019056fe608060405234801561001057600080fd5b5060405161086e38038061086e83398101604081905261002f91610083565b600080546001600160a01b039485166001600160a01b03199182161790915560048054939094169216919091179091556003556100be565b80516001600160a01b038116811461007e57600080fd5b919050565b600080600060608486031215610097578283fd5b6100a084610067565b92506100ae60208501610067565b9150604084015190509250925092565b6107a1806100cd6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638f12167c1161005b5780638f12167c146100e6578063bcd84a71146100f9578063cfbff97d1461010c578063e5a6b10f1461011f57610088565b8063087d8d011461008d5780633f62327d146100ab5780636c91eaf0146100c057806376eb4a7a146100d3575b600080fd5b610095610134565b6040516100a2919061071d565b60405180910390f35b6100be6100b93660046105d3565b61013a565b005b6100956100ce36600461058e565b6101d7565b6100be6100e13660046105a8565b610226565b6100be6100f436600461052c565b6102d5565b6100be61010736600461058e565b610376565b61009561011a36600461058e565b6103dc565b6101276103f2565b6040516100a29190610635565b60035490565b6000546001600160a01b0316331461016d5760405162461bcd60e51b815260040161016490610699565b60405180910390fd5b61ffff821660009081526001602052604081208054839290610190908490610726565b925050819055508161ffff167fcbaed5fcfc493a166ff2613b47067c7daa5df612fb4bbc5582838d2acdc720fb826040516101cb919061071d565b60405180910390a25050565b61ffff8116600090815260026020526040812054156102095761ffff821660009081526002602052604090205461021e565b61ffff82166000908152600160205260409020545b90505b919050565b6000546001600160a01b031633146102505760405162461bcd60e51b815260040161016490610699565b61ffff83166000908152600160205260408120805483929061027390849061073e565b909155505060045461028f906001600160a01b03168383610401565b816001600160a01b03167f9ebd923e97d4ce72c1c254dcf6f6c9e2dff02701382ff17d7b0b6e8897c9aafb826040516102c8919061071d565b60405180910390a2505050565b6000546001600160a01b031633146102ff5760405162461bcd60e51b815260040161016490610699565b61ffff82166000908152600160205260409020548111156103325760405162461bcd60e51b815260040161016490610662565b61ffff82166000908152600160205260408120805483929061035590849061073e565b9091555050600454610371906001600160a01b03168483610401565b505050565b6000546001600160a01b031633146103a05760405162461bcd60e51b815260040161016490610699565b61ffff81166000908152600260205260409020546103d95761ffff81166000908152600160209081526040808320546002909252909120555b50565b61ffff1660009081526001602052604090205490565b6004546001600160a01b031681565b600080846001600160a01b031663a9059cbb8585604051602401610426929190610649565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161047491906105fc565b6000604051808303816000865af19150503d80600081146104b1576040519150601f19603f3d011682016040523d82523d6000602084013e6104b6565b606091505b50915091508180156104e05750805115806104e05750808060200190518101906104e09190610567565b6104fc5760405162461bcd60e51b8152600401610164906106d0565b5050505050565b80356001600160a01b038116811461022157600080fd5b803561ffff8116811461022157600080fd5b600080600060608486031215610540578283fd5b61054984610503565b92506105576020850161051a565b9150604084013590509250925092565b600060208284031215610578578081fd5b81518015158114610587578182fd5b9392505050565b60006020828403121561059f578081fd5b6105878261051a565b6000806000606084860312156105bc578283fd5b6105c58461051a565b925061055760208501610503565b600080604083850312156105e5578182fd5b6105ee8361051a565b946020939093013593505050565b60008251815b8181101561061c5760208186018101518583015201610602565b8181111561062a5782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6020808252601b908201527f556e6f52653a20496e73756666696369656e74205072656d69756d0000000000604082015260600190565b60208082526011908201527f556e6f52653a204e6f7420636f686f7274000000000000000000000000000000604082015260600190565b6020808252602d908201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260408201526c185b9cd9995c8819985a5b1959609a1b606082015260800190565b90815260200190565b6000821982111561073957610739610755565b500190565b60008282101561075057610750610755565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220d31378bb13cc8e6322cb9841b1bfdd64fd0d778860f71cc282e1529e7db417e164736f6c63430008000033a2646970667358221220bcc54ef27df8f0741f2ecc86812c2fd642e94c3bcaa43ff7f3c3a97ced682d1e64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063b001e09a14610030575b600080fd5b61004361003e3660046100a9565b610059565b60405161005091906100df565b60405180910390f35b60008033848460405161006b9061009c565b610077939291906100f3565b604051809103906000f080158015610093573d6000803e3d6000fd5b50949350505050565b61086e8061011883390190565b600080604083850312156100bb578182fd5b82356001600160a01b03811681146100d1578283fd5b946020939093013593505050565b6001600160a01b0391909116815260200190565b6001600160a01b03938416815291909216602082015260408101919091526060019056fe608060405234801561001057600080fd5b5060405161086e38038061086e83398101604081905261002f91610083565b600080546001600160a01b039485166001600160a01b03199182161790915560048054939094169216919091179091556003556100be565b80516001600160a01b038116811461007e57600080fd5b919050565b600080600060608486031215610097578283fd5b6100a084610067565b92506100ae60208501610067565b9150604084015190509250925092565b6107a1806100cd6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638f12167c1161005b5780638f12167c146100e6578063bcd84a71146100f9578063cfbff97d1461010c578063e5a6b10f1461011f57610088565b8063087d8d011461008d5780633f62327d146100ab5780636c91eaf0146100c057806376eb4a7a146100d3575b600080fd5b610095610134565b6040516100a2919061071d565b60405180910390f35b6100be6100b93660046105d3565b61013a565b005b6100956100ce36600461058e565b6101d7565b6100be6100e13660046105a8565b610226565b6100be6100f436600461052c565b6102d5565b6100be61010736600461058e565b610376565b61009561011a36600461058e565b6103dc565b6101276103f2565b6040516100a29190610635565b60035490565b6000546001600160a01b0316331461016d5760405162461bcd60e51b815260040161016490610699565b60405180910390fd5b61ffff821660009081526001602052604081208054839290610190908490610726565b925050819055508161ffff167fcbaed5fcfc493a166ff2613b47067c7daa5df612fb4bbc5582838d2acdc720fb826040516101cb919061071d565b60405180910390a25050565b61ffff8116600090815260026020526040812054156102095761ffff821660009081526002602052604090205461021e565b61ffff82166000908152600160205260409020545b90505b919050565b6000546001600160a01b031633146102505760405162461bcd60e51b815260040161016490610699565b61ffff83166000908152600160205260408120805483929061027390849061073e565b909155505060045461028f906001600160a01b03168383610401565b816001600160a01b03167f9ebd923e97d4ce72c1c254dcf6f6c9e2dff02701382ff17d7b0b6e8897c9aafb826040516102c8919061071d565b60405180910390a2505050565b6000546001600160a01b031633146102ff5760405162461bcd60e51b815260040161016490610699565b61ffff82166000908152600160205260409020548111156103325760405162461bcd60e51b815260040161016490610662565b61ffff82166000908152600160205260408120805483929061035590849061073e565b9091555050600454610371906001600160a01b03168483610401565b505050565b6000546001600160a01b031633146103a05760405162461bcd60e51b815260040161016490610699565b61ffff81166000908152600260205260409020546103d95761ffff81166000908152600160209081526040808320546002909252909120555b50565b61ffff1660009081526001602052604090205490565b6004546001600160a01b031681565b600080846001600160a01b031663a9059cbb8585604051602401610426929190610649565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161047491906105fc565b6000604051808303816000865af19150503d80600081146104b1576040519150601f19603f3d011682016040523d82523d6000602084013e6104b6565b606091505b50915091508180156104e05750805115806104e05750808060200190518101906104e09190610567565b6104fc5760405162461bcd60e51b8152600401610164906106d0565b5050505050565b80356001600160a01b038116811461022157600080fd5b803561ffff8116811461022157600080fd5b600080600060608486031215610540578283fd5b61054984610503565b92506105576020850161051a565b9150604084013590509250925092565b600060208284031215610578578081fd5b81518015158114610587578182fd5b9392505050565b60006020828403121561059f578081fd5b6105878261051a565b6000806000606084860312156105bc578283fd5b6105c58461051a565b925061055760208501610503565b600080604083850312156105e5578182fd5b6105ee8361051a565b946020939093013593505050565b60008251815b8181101561061c5760208186018101518583015201610602565b8181111561062a5782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6020808252601b908201527f556e6f52653a20496e73756666696369656e74205072656d69756d0000000000604082015260600190565b60208082526011908201527f556e6f52653a204e6f7420636f686f7274000000000000000000000000000000604082015260600190565b6020808252602d908201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260408201526c185b9cd9995c8819985a5b1959609a1b606082015260800190565b90815260200190565b6000821982111561073957610739610755565b500190565b60008282101561075057610750610755565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220d31378bb13cc8e6322cb9841b1bfdd64fd0d778860f71cc282e1529e7db417e164736f6c63430008000033a2646970667358221220bcc54ef27df8f0741f2ecc86812c2fd642e94c3bcaa43ff7f3c3a97ced682d1e64736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}